[
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "com.erp.pagosonline.PagosonlineApplication"
  },
  {
    "name": "com.erp.pagosonline.PagosonlineApplication__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.erp.pagosonline.PagosonlineApplication"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.netflix.appinfo.ApplicationInfoManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.DataCenterInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.DataCenterInfo$Name",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.InstanceInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.InstanceInfo$ActionType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.InstanceInfo$PortWrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.LeaseInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.MyDataCenterInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.converters.jackson.builder.ApplicationsJacksonBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.converters.jackson.DataCenterTypeInfoResolver",
    "allPublicConstructors": true
  },
  {
    "name": "com.netflix.discovery.converters.jackson.mixin.InstanceInfoJsonMixIn",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.DiscoveryClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.EurekaClient",
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.Application",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.Applications",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.resolver.AsyncResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.resolver.DefaultEndpoint",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.resolver.EurekaEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$RequestExecutor",
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.shared.transport.EurekaHttpResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.TimedSupervisorTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "condition": {
      "typeReachable": "org.springframework.orm.jpa.SharedEntityManagerCreator"
    },
    "methods": [
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.NamedEntityGraph",
    "condition": {
      "typeReachable": "org.springframework.data.jpa.repository.EntityGraph"
    },
    "allPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Query",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getResultStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.net.http.HttpClient",
    "condition": {
      "typeReachable": "java.net.http.HttpClient"
    }
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "java.util.EventListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "org.apache.hc.client5.http.impl.classic.HttpClients",
    "condition": {
      "typeReachable": "org.apache.hc.client5.http.impl.classic.HttpClients"
    }
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.hibernate.query.sqm.tree.select.SqmQueryPart[]",
    "unsafeAllocated": true
  },
  {
    "name": "org.postgresql.ds.PGSimpleDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.beans.BeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryEndpointExposureOutcomeContributor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.EndpointExposureOutcomeContributor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowBeanDefinitionOverriding",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCircularReferences",
        "parameterTypes": [ ]
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isLazyInitialization",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogStartupInfo",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterShutdownHook",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.BootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.CorrelationIdConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesBeans",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesRebinder",
        "parameterTypes": [
          "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapImportSelectorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "bootstrapProperties"
      },
      {
        "name": "propertySourceLocators"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowOverride",
        "parameterTypes": [ ]
      },
      {
        "name": "isInitializeOnContextRefresh",
        "parameterTypes": [ ]
      },
      {
        "name": "isOverrideNone",
        "parameterTypes": [ ]
      },
      {
        "name": "isOverrideSystemProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitializeOnContextRefresh",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOverrideNone",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOverrideSystemProperties",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.config.PropertySourceLocator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "environmentDecryptApplicationListener",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
        ]
      },
      {
        "name": "keyProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getSalt",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setFailOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getDiscovery",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getLabel",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaType",
        "parameterTypes": [ ]
      },
      {
        "name": "getMultipleUriStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfile",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getTls",
        "parameterTypes": [ ]
      },
      {
        "name": "getToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailFast",
        "parameterTypes": [ ]
      },
      {
        "name": "isSendAllLabels",
        "parameterTypes": [ ]
      },
      {
        "name": "isSendState",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setDiscovery",
        "parameterTypes": [
          "org.springframework.cloud.config.client.ConfigClientProperties$Discovery"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMultipleUriStrategy",
        "parameterTypes": [
          "org.springframework.cloud.config.client.ConfigClientProperties$MultipleUriStrategy"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProfile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRequestReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSendAllLabels",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSendState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTls",
        "parameterTypes": [
          "org.springframework.cloud.configuration.TlsProperties"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientProperties$Discovery",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServiceId",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServiceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientRetryBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor$ImportExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "environment"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configClientProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "configServicePropertySource",
        "parameterTypes": [
          "org.springframework.cloud.config.client.ConfigClientProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServicePropertySourceLocator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.client.diagnostics.analyzer.InvalidApplicationNameExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.config.client.RetryTemplateFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.environment.Environment",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.environment.PropertySource",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaServiceInstance",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Unpaged",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    }
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractAuditable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractPersistable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$ReactiveFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.ProxyUtils$ProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PageModelConverter",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PlainPageSerializationWarning",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebSettings",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.EnableSpringDataWebSupport"
    },
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PagedModel",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PagedModel$PageMetadata",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.HttpComponentsClientHttpRequestFactory",
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.JdkClientHttpRequestFactory",
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.converter.json.ProblemDetailJacksonMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.security.crypto.encrypt.RsaSecretEncryptor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet"
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  }
]
