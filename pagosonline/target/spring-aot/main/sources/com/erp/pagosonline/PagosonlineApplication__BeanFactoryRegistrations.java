package com.erp.pagosonline;

import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.bootstrap.BootstrapImportSelectorConfiguration__BeanDefinitions;
import org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration__BeanDefinitions;
import org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties__BeanDefinitions;
import org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration__BeanDefinitions;
import org.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class PagosonlineApplication__BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("bootstrapImportSelectorConfiguration", BootstrapImportSelectorConfiguration__BeanDefinitions.getBootstrapImportSelectorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration", ConfigServiceBootstrapConfiguration__BeanDefinitions.getConfigServiceBootstrapConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("configClientProperties", ConfigServiceBootstrapConfiguration__BeanDefinitions.getConfigClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("configServicePropertySource", ConfigServiceBootstrapConfiguration__BeanDefinitions.getConfigServicePropertySourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration", PropertySourceBootstrapConfiguration__BeanDefinitions.getPropertySourceBootstrapConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties", PropertySourceBootstrapProperties__BeanDefinitions.getPropertySourceBootstrapPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration", EncryptionBootstrapConfiguration__BeanDefinitions.getEncryptionBootstrapConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("keyProperties", EncryptionBootstrapConfiguration__BeanDefinitions.getKeyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("environmentDecryptApplicationListener", EncryptionBootstrapConfiguration__BeanDefinitions.getEnvironmentDecryptApplicationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesRebinderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("configurationPropertiesBeans", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesBeansBeanDefinition());
    beanFactory.registerBeanDefinition("configurationPropertiesRebinder", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesRebinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
  }
}
