package com.erp.comercializacion;

import com.erp.comercializacion.controllers.AbonadosApi__BeanDefinitions;
import com.erp.comercializacion.controllers.CategoriasApi__BeanDefinitions;
import com.erp.comercializacion.controllers.ClientesApi__BeanDefinitions;
import com.erp.comercializacion.controllers.EstadomApi__BeanDefinitions;
import com.erp.comercializacion.controllers.InteresesApi__BeanDefinitions;
import com.erp.comercializacion.controllers.LecturasApi__BeanDefinitions;
import com.erp.comercializacion.controllers.NacionalidadApi__BeanDefinitions;
import com.erp.comercializacion.controllers.PersoneriajuridicaApi__BeanDefinitions;
import com.erp.comercializacion.controllers.RutasApi__BeanDefinitions;
import com.erp.comercializacion.controllers.TipopagoApi__BeanDefinitions;
import com.erp.comercializacion.controllers.TpidentificaApi__BeanDefinitions;
import com.erp.comercializacion.controllers.UbicacionmApi__BeanDefinitions;
import com.erp.comercializacion.repositories.AbonadosR__BeanDefinitions;
import com.erp.comercializacion.repositories.AbonadosxsuspensionR__BeanDefinitions;
import com.erp.comercializacion.repositories.AguatramiteR__BeanDefinitions;
import com.erp.comercializacion.repositories.CatalogoitemsR__BeanDefinitions;
import com.erp.comercializacion.repositories.CategoriasR__BeanDefinitions;
import com.erp.comercializacion.repositories.CcertificacionesR__BeanDefinitions;
import com.erp.comercializacion.repositories.ClientesR__BeanDefinitions;
import com.erp.comercializacion.repositories.CtramitesR__BeanDefinitions;
import com.erp.comercializacion.repositories.EmisionesR__BeanDefinitions;
import com.erp.comercializacion.repositories.EmisionindividualR__BeanDefinitions;
import com.erp.comercializacion.repositories.EstadomR__BeanDefinitions;
import com.erp.comercializacion.repositories.FacturacionR__BeanDefinitions;
import com.erp.comercializacion.repositories.FacturasR__BeanDefinitions;
import com.erp.comercializacion.repositories.InteresesR__BeanDefinitions;
import com.erp.comercializacion.repositories.LecturasR__BeanDefinitions;
import com.erp.comercializacion.repositories.ModulosR__BeanDefinitions;
import com.erp.comercializacion.repositories.NacionalidadR__BeanDefinitions;
import com.erp.comercializacion.repositories.NovedadesR__BeanDefinitions;
import com.erp.comercializacion.repositories.PersonJuridicaR__BeanDefinitions;
import com.erp.comercializacion.repositories.RubrosR__BeanDefinitions;
import com.erp.comercializacion.repositories.RutasR__BeanDefinitions;
import com.erp.comercializacion.repositories.RutasxemisionR__BeanDefinitions;
import com.erp.comercializacion.repositories.SuspensionesR__BeanDefinitions;
import com.erp.comercializacion.repositories.TipopagoR__BeanDefinitions;
import com.erp.comercializacion.repositories.TipotramiteR__BeanDefinitions;
import com.erp.comercializacion.repositories.TpcertificaR__BeanDefinitions;
import com.erp.comercializacion.repositories.TpidentificaR__BeanDefinitions;
import com.erp.comercializacion.repositories.TptramiteR__BeanDefinitions;
import com.erp.comercializacion.repositories.UbicacionmR__BeanDefinitions;
import com.erp.comercializacion.repositories.UsoitemsR__BeanDefinitions;
import com.erp.comercializacion.services.AbonadosSevice__BeanDefinitions;
import com.erp.comercializacion.services.AbonadosxsuspensionService__BeanDefinitions;
import com.erp.comercializacion.services.AguatramiteService__BeanDefinitions;
import com.erp.comercializacion.services.CatalogoitemsService__BeanDefinitions;
import com.erp.comercializacion.services.CategoriasService__BeanDefinitions;
import com.erp.comercializacion.services.CcertificacionesService__BeanDefinitions;
import com.erp.comercializacion.services.ClientesService__BeanDefinitions;
import com.erp.comercializacion.services.CtramitesService__BeanDefinitions;
import com.erp.comercializacion.services.EmisionesService__BeanDefinitions;
import com.erp.comercializacion.services.EmisionindividualService__BeanDefinitions;
import com.erp.comercializacion.services.EstadomService__BeanDefinitions;
import com.erp.comercializacion.services.FacturacionService__BeanDefinitions;
import com.erp.comercializacion.services.FacturasService__BeanDefinitions;
import com.erp.comercializacion.services.InteresService__BeanDefinitions;
import com.erp.comercializacion.services.LecturasService__BeanDefinitions;
import com.erp.comercializacion.services.ModulosService__BeanDefinitions;
import com.erp.comercializacion.services.NacionalidadService__BeanDefinitions;
import com.erp.comercializacion.services.NovedadesService__BeanDefinitions;
import com.erp.comercializacion.services.PersonJuridicaService__BeanDefinitions;
import com.erp.comercializacion.services.RubrosService__BeanDefinitions;
import com.erp.comercializacion.services.RutasService__BeanDefinitions;
import com.erp.comercializacion.services.RuttasxemisionService__BeanDefinitions;
import com.erp.comercializacion.services.SuspensionesService__BeanDefinitions;
import com.erp.comercializacion.services.TipopagoService__BeanDefinitions;
import com.erp.comercializacion.services.TipotramiteService__BeanDefinitions;
import com.erp.comercializacion.services.TpcertificaService__BeanDefinitions;
import com.erp.comercializacion.services.TpidentificaService__BeanDefinitions;
import com.erp.comercializacion.services.TptramiteService__BeanDefinitions;
import com.erp.comercializacion.services.UbicacionmService__BeanDefinitions;
import com.erp.comercializacion.services.UsoitemsService__BeanDefinitions;
import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator__BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.gson.GsonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.client.HttpClientProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions;
import org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.RefreshAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.CommonsClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties__BeanDefinitions;
import org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.commons.util.UtilAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.config.client.ConfigClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.configuration.CompatibilityVerifierProperties__BeanDefinitions;
import org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification__BeanDefinitions;
import org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties__BeanDefinitions;
import org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.RestClientTimeoutProperties__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;
import org.springframework.data.jpa.mapping.JpaMetamodelMappingContext__BeanDefinitions;
import org.springframework.data.jpa.repository.support.DefaultJpaContext__BeanDefinitions;
import org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor__BeanDefinitions;
import org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension__BeanDefinitions;
import org.springframework.data.jpa.util.JpaMetamodelCacheCleanup__BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__BeanDefinitions;
import org.springframework.data.web.config.ProjectingArgumentResolverRegistrar__BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__BeanDefinitions;
import org.springframework.data.web.config.SpringDataWebConfiguration__BeanDefinitions;
import org.springframework.orm.jpa.SharedEntityManagerCreator__BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class ComercializacionApplication__BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("comercializacionApplication", ComercializacionApplication__BeanDefinitions.getComercializacionApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("abonadosApi", AbonadosApi__BeanDefinitions.getAbonadosApiBeanDefinition());
    beanFactory.registerBeanDefinition("categoriasApi", CategoriasApi__BeanDefinitions.getCategoriasApiBeanDefinition());
    beanFactory.registerBeanDefinition("clientesApi", ClientesApi__BeanDefinitions.getClientesApiBeanDefinition());
    beanFactory.registerBeanDefinition("estadomApi", EstadomApi__BeanDefinitions.getEstadomApiBeanDefinition());
    beanFactory.registerBeanDefinition("interesesApi", InteresesApi__BeanDefinitions.getInteresesApiBeanDefinition());
    beanFactory.registerBeanDefinition("lecturasApi", LecturasApi__BeanDefinitions.getLecturasApiBeanDefinition());
    beanFactory.registerBeanDefinition("nacionalidadApi", NacionalidadApi__BeanDefinitions.getNacionalidadApiBeanDefinition());
    beanFactory.registerBeanDefinition("personeriajuridicaApi", PersoneriajuridicaApi__BeanDefinitions.getPersoneriajuridicaApiBeanDefinition());
    beanFactory.registerBeanDefinition("rutasApi", RutasApi__BeanDefinitions.getRutasApiBeanDefinition());
    beanFactory.registerBeanDefinition("tipopagoApi", TipopagoApi__BeanDefinitions.getTipopagoApiBeanDefinition());
    beanFactory.registerBeanDefinition("tpidentificaApi", TpidentificaApi__BeanDefinitions.getTpidentificaApiBeanDefinition());
    beanFactory.registerBeanDefinition("ubicacionmApi", UbicacionmApi__BeanDefinitions.getUbicacionmApiBeanDefinition());
    beanFactory.registerBeanDefinition("abonadosSevice", AbonadosSevice__BeanDefinitions.getAbonadosSeviceBeanDefinition());
    beanFactory.registerBeanDefinition("abonadosxsuspensionService", AbonadosxsuspensionService__BeanDefinitions.getAbonadosxsuspensionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("aguatramiteService", AguatramiteService__BeanDefinitions.getAguatramiteServiceBeanDefinition());
    beanFactory.registerBeanDefinition("catalogoitemsService", CatalogoitemsService__BeanDefinitions.getCatalogoitemsServiceBeanDefinition());
    beanFactory.registerBeanDefinition("categoriasService", CategoriasService__BeanDefinitions.getCategoriasServiceBeanDefinition());
    beanFactory.registerBeanDefinition("ccertificacionesService", CcertificacionesService__BeanDefinitions.getCcertificacionesServiceBeanDefinition());
    beanFactory.registerBeanDefinition("clientesService", ClientesService__BeanDefinitions.getClientesServiceBeanDefinition());
    beanFactory.registerBeanDefinition("ctramitesService", CtramitesService__BeanDefinitions.getCtramitesServiceBeanDefinition());
    beanFactory.registerBeanDefinition("emisionesService", EmisionesService__BeanDefinitions.getEmisionesServiceBeanDefinition());
    beanFactory.registerBeanDefinition("emisionindividualService", EmisionindividualService__BeanDefinitions.getEmisionindividualServiceBeanDefinition());
    beanFactory.registerBeanDefinition("estadomService", EstadomService__BeanDefinitions.getEstadomServiceBeanDefinition());
    beanFactory.registerBeanDefinition("facturacionService", FacturacionService__BeanDefinitions.getFacturacionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("facturasService", FacturasService__BeanDefinitions.getFacturasServiceBeanDefinition());
    beanFactory.registerBeanDefinition("interesService", InteresService__BeanDefinitions.getInteresServiceBeanDefinition());
    beanFactory.registerBeanDefinition("lecturasService", LecturasService__BeanDefinitions.getLecturasServiceBeanDefinition());
    beanFactory.registerBeanDefinition("modulosService", ModulosService__BeanDefinitions.getModulosServiceBeanDefinition());
    beanFactory.registerBeanDefinition("nacionalidadService", NacionalidadService__BeanDefinitions.getNacionalidadServiceBeanDefinition());
    beanFactory.registerBeanDefinition("novedadesService", NovedadesService__BeanDefinitions.getNovedadesServiceBeanDefinition());
    beanFactory.registerBeanDefinition("personJuridicaService", PersonJuridicaService__BeanDefinitions.getPersonJuridicaServiceBeanDefinition());
    beanFactory.registerBeanDefinition("rubrosService", RubrosService__BeanDefinitions.getRubrosServiceBeanDefinition());
    beanFactory.registerBeanDefinition("rutasService", RutasService__BeanDefinitions.getRutasServiceBeanDefinition());
    beanFactory.registerBeanDefinition("ruttasxemisionService", RuttasxemisionService__BeanDefinitions.getRuttasxemisionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("suspensionesService", SuspensionesService__BeanDefinitions.getSuspensionesServiceBeanDefinition());
    beanFactory.registerBeanDefinition("tipopagoService", TipopagoService__BeanDefinitions.getTipopagoServiceBeanDefinition());
    beanFactory.registerBeanDefinition("tipotramiteService", TipotramiteService__BeanDefinitions.getTipotramiteServiceBeanDefinition());
    beanFactory.registerBeanDefinition("tpcertificaService", TpcertificaService__BeanDefinitions.getTpcertificaServiceBeanDefinition());
    beanFactory.registerBeanDefinition("tpidentificaService", TpidentificaService__BeanDefinitions.getTpidentificaServiceBeanDefinition());
    beanFactory.registerBeanDefinition("tptramiteService", TptramiteService__BeanDefinitions.getTptramiteServiceBeanDefinition());
    beanFactory.registerBeanDefinition("ubicacionmService", UbicacionmService__BeanDefinitions.getUbicacionmServiceBeanDefinition());
    beanFactory.registerBeanDefinition("usoitemsService", UsoitemsService__BeanDefinitions.getUsoitemsServiceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration", AutoServiceRegistrationConfiguration__BeanDefinitions.getAutoServiceRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties", AutoServiceRegistrationProperties__BeanDefinitions.getAutoServiceRegistrationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration", AopAutoConfiguration__BeanDefinitions.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", AnnotationAwareAspectJAutoProxyCreator__BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration", AopAutoConfiguration__BeanDefinitions.AspectJAutoProxyingConfiguration.getAspectJAutoProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration", JtaAutoConfiguration__BeanDefinitions.getJtaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari", DataSourceConfiguration__BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetailsHikariBeanPostProcessor", DataSourceConfiguration__BeanDefinitions.Hikari.getJdbcConnectionDetailsHikariBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("dataSource", DataSourceConfiguration__BeanDefinitions.Hikari.getDataSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari", DataSourceJmxConfiguration__BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration", DataSourceJmxConfiguration__BeanDefinitions.getDataSourceJmxConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration", DataSourceAutoConfiguration__BeanDefinitions.PooledDataSourceConfiguration.getPooledDataSourceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetails", DataSourceAutoConfiguration__BeanDefinitions.PooledDataSourceConfiguration.getJdbcConnectionDetailsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariPoolDataSourceMetadataProvider", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.getDataSourcePoolMetadataProvidersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", DataSourceAutoConfiguration__BeanDefinitions.getDataSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration", TransactionManagerCustomizationAutoConfiguration__BeanDefinitions.getTransactionManagerCustomizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionManagerCustomizationAutoConfiguration__BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionExecutionListeners", TransactionManagerCustomizationAutoConfiguration__BeanDefinitions.getTransactionExecutionListenersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer", RefreshAutoConfiguration__BeanDefinitions.RefreshScopeBeanDefinitionEnhancer.getRefreshScopeBeanDefinitionEnhancerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RefreshAutoConfiguration", RefreshAutoConfiguration__BeanDefinitions.getRefreshAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("refreshScope", RefreshAutoConfiguration__BeanDefinitions.getRefreshScopeBeanDefinition());
    beanFactory.registerBeanDefinition("loggingRebinder", RefreshAutoConfiguration__BeanDefinitions.getLoggingRebinderBeanDefinition());
    beanFactory.registerBeanDefinition("configDataContextRefresher", RefreshAutoConfiguration__BeanDefinitions.getConfigDataContextRefresherBeanDefinition());
    beanFactory.registerBeanDefinition("refreshScopeLifecycle", RefreshAutoConfiguration__BeanDefinitions.getRefreshScopeLifecycleBeanDefinition());
    beanFactory.registerBeanDefinition("refreshEventListener", RefreshAutoConfiguration__BeanDefinitions.getRefreshEventListenerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties", RefreshAutoConfiguration__BeanDefinitions.RefreshProperties.getRefreshPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getJpaWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptor", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptorConfigurer", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration", JpaBaseConfiguration__BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceManagedTypes", JpaBaseConfiguration__BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration", HibernateJpaConfiguration__BeanDefinitions.getHibernateJpaConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionManager", HibernateJpaConfiguration__BeanDefinitions.getTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaVendorAdapter", HibernateJpaConfiguration__BeanDefinitions.getJpaVendorAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactoryBuilder", HibernateJpaConfiguration__BeanDefinitions.getEntityManagerFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactory", HibernateJpaConfiguration__BeanDefinitions.getEntityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties", HibernateProperties__BeanDefinitions.getHibernatePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties", JpaProperties__BeanDefinitions.getJpaPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration", HibernateJpaAutoConfiguration__BeanDefinitions.getHibernateJpaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration", JpaRepositoriesAutoConfiguration__BeanDefinitions.getJpaRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_entityManagerFactory", SharedEntityManagerCreator__BeanDefinitions.getJpaSharedEMentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("emBeanDefinitionRegistrarPostProcessor", EntityManagerBeanDefinitionRegistrarPostProcessor__BeanDefinitions.getEmBeanDefinitionRegistrarPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("jpaMappingContext", JpaMetamodelMappingContext__BeanDefinitions.getJpaMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("jpaContext", DefaultJpaContext__BeanDefinitions.getJpaContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.util.JpaMetamodelCacheCleanup", JpaMetamodelCacheCleanup__BeanDefinitions.getJpaMetamodelCacheCleanupBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension", JpaEvaluationContextExtension__BeanDefinitions.getJpaEvaluationContextExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#0", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.AbonadosR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("abonadosR", AbonadosR__BeanDefinitions.getAbonadosRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#1", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition1());
    beanFactory.registerBeanDefinition("jpa.UbicacionmR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition1());
    beanFactory.registerBeanDefinition("ubicacionmR", UbicacionmR__BeanDefinitions.getUbicacionmRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#2", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition2());
    beanFactory.registerBeanDefinition("jpa.InteresesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition2());
    beanFactory.registerBeanDefinition("interesesR", InteresesR__BeanDefinitions.getInteresesRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#3", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition3());
    beanFactory.registerBeanDefinition("jpa.LecturasR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition3());
    beanFactory.registerBeanDefinition("lecturasR", LecturasR__BeanDefinitions.getLecturasRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#4", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition4());
    beanFactory.registerBeanDefinition("jpa.TpcertificaR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition4());
    beanFactory.registerBeanDefinition("tpcertificaR", TpcertificaR__BeanDefinitions.getTpcertificaRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#5", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition5());
    beanFactory.registerBeanDefinition("jpa.TpidentificaR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition5());
    beanFactory.registerBeanDefinition("tpidentificaR", TpidentificaR__BeanDefinitions.getTpidentificaRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#6", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition6());
    beanFactory.registerBeanDefinition("jpa.RutasxemisionR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition6());
    beanFactory.registerBeanDefinition("rutasxemisionR", RutasxemisionR__BeanDefinitions.getRutasxemisionRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#7", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition7());
    beanFactory.registerBeanDefinition("jpa.CategoriasR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition7());
    beanFactory.registerBeanDefinition("categoriasR", CategoriasR__BeanDefinitions.getCategoriasRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#8", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition8());
    beanFactory.registerBeanDefinition("jpa.RubrosR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition8());
    beanFactory.registerBeanDefinition("rubrosR", RubrosR__BeanDefinitions.getRubrosRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#9", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition9());
    beanFactory.registerBeanDefinition("jpa.SuspensionesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition9());
    beanFactory.registerBeanDefinition("suspensionesR", SuspensionesR__BeanDefinitions.getSuspensionesRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#10", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition10());
    beanFactory.registerBeanDefinition("jpa.EstadomR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition10());
    beanFactory.registerBeanDefinition("estadomR", EstadomR__BeanDefinitions.getEstadomRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#11", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition11());
    beanFactory.registerBeanDefinition("jpa.NacionalidadR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition11());
    beanFactory.registerBeanDefinition("nacionalidadR", NacionalidadR__BeanDefinitions.getNacionalidadRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#12", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition12());
    beanFactory.registerBeanDefinition("jpa.AguatramiteR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition12());
    beanFactory.registerBeanDefinition("aguatramiteR", AguatramiteR__BeanDefinitions.getAguatramiteRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#13", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition13());
    beanFactory.registerBeanDefinition("jpa.EmisionesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition13());
    beanFactory.registerBeanDefinition("emisionesR", EmisionesR__BeanDefinitions.getEmisionesRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#14", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition14());
    beanFactory.registerBeanDefinition("jpa.FacturasR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition14());
    beanFactory.registerBeanDefinition("facturasR", FacturasR__BeanDefinitions.getFacturasRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#15", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition15());
    beanFactory.registerBeanDefinition("jpa.TptramiteR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition15());
    beanFactory.registerBeanDefinition("tptramiteR", TptramiteR__BeanDefinitions.getTptramiteRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#16", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition16());
    beanFactory.registerBeanDefinition("jpa.AbonadosxsuspensionR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition16());
    beanFactory.registerBeanDefinition("abonadosxsuspensionR", AbonadosxsuspensionR__BeanDefinitions.getAbonadosxsuspensionRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#17", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition17());
    beanFactory.registerBeanDefinition("jpa.NovedadesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition17());
    beanFactory.registerBeanDefinition("novedadesR", NovedadesR__BeanDefinitions.getNovedadesRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#18", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition18());
    beanFactory.registerBeanDefinition("jpa.TipotramiteR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition18());
    beanFactory.registerBeanDefinition("tipotramiteR", TipotramiteR__BeanDefinitions.getTipotramiteRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#19", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition19());
    beanFactory.registerBeanDefinition("jpa.PersonJuridicaR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition19());
    beanFactory.registerBeanDefinition("personJuridicaR", PersonJuridicaR__BeanDefinitions.getPersonJuridicaRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#20", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition20());
    beanFactory.registerBeanDefinition("jpa.UsoitemsR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition20());
    beanFactory.registerBeanDefinition("usoitemsR", UsoitemsR__BeanDefinitions.getUsoitemsRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#21", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition21());
    beanFactory.registerBeanDefinition("jpa.CtramitesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition21());
    beanFactory.registerBeanDefinition("ctramitesR", CtramitesR__BeanDefinitions.getCtramitesRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#22", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition22());
    beanFactory.registerBeanDefinition("jpa.ModulosR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition22());
    beanFactory.registerBeanDefinition("modulosR", ModulosR__BeanDefinitions.getModulosRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#23", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition23());
    beanFactory.registerBeanDefinition("jpa.EmisionindividualR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition23());
    beanFactory.registerBeanDefinition("emisionindividualR", EmisionindividualR__BeanDefinitions.getEmisionindividualRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#24", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition24());
    beanFactory.registerBeanDefinition("jpa.RutasR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition24());
    beanFactory.registerBeanDefinition("rutasR", RutasR__BeanDefinitions.getRutasRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#25", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition25());
    beanFactory.registerBeanDefinition("jpa.TipopagoR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition25());
    beanFactory.registerBeanDefinition("tipopagoR", TipopagoR__BeanDefinitions.getTipopagoRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#26", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition26());
    beanFactory.registerBeanDefinition("jpa.CatalogoitemsR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition26());
    beanFactory.registerBeanDefinition("catalogoitemsR", CatalogoitemsR__BeanDefinitions.getCatalogoitemsRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#27", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition27());
    beanFactory.registerBeanDefinition("jpa.CcertificacionesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition27());
    beanFactory.registerBeanDefinition("ccertificacionesR", CcertificacionesR__BeanDefinitions.getCcertificacionesRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#28", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition28());
    beanFactory.registerBeanDefinition("jpa.FacturacionR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition28());
    beanFactory.registerBeanDefinition("facturacionR", FacturacionR__BeanDefinitions.getFacturacionRBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#29", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition29());
    beanFactory.registerBeanDefinition("jpa.ClientesR.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition29());
    beanFactory.registerBeanDefinition("clientesR", ClientesR__BeanDefinitions.getClientesRBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration", GsonAutoConfiguration__BeanDefinitions.getGsonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("gsonBuilder", GsonAutoConfiguration__BeanDefinitions.getGsonBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("gson", GsonAutoConfiguration__BeanDefinitions.getGsonBeanDefinition());
    beanFactory.registerBeanDefinition("standardGsonBuilderCustomizer", GsonAutoConfiguration__BeanDefinitions.getStandardGsonBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties", GsonProperties__BeanDefinitions.getGsonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration", GsonHttpMessageConvertersConfiguration__BeanDefinitions.getGsonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.ProjectingArgumentResolverRegistrar", ProjectingArgumentResolverRegistrar__BeanDefinitions.getProjectingArgumentResolverRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("projectingArgumentResolverBeanPostProcessor", ProjectingArgumentResolverRegistrar__BeanDefinitions.getProjectingArgumentResolverBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataWebConfiguration", SpringDataWebConfiguration__BeanDefinitions.getSpringDataWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", SpringDataWebConfiguration__BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", SpringDataWebConfiguration__BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("offsetResolver", SpringDataWebConfiguration__BeanDefinitions.getOffsetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("pageModule", SpringDataJacksonConfiguration__BeanDefinitions.getPageModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration", SpringDataWebAutoConfiguration__BeanDefinitions.getSpringDataWebAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableCustomizer", SpringDataWebAutoConfiguration__BeanDefinitions.getPageableCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("sortCustomizer", SpringDataWebAutoConfiguration__BeanDefinitions.getSortCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("springDataWebSettings", SpringDataWebAutoConfiguration__BeanDefinitions.getSpringDataWebSettingsBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties", SpringDataWebProperties__BeanDefinitions.getSpringDataWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration", HttpClientAutoConfiguration__BeanDefinitions.getHttpClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpRequestFactoryBuilder", HttpClientAutoConfiguration__BeanDefinitions.getClientHttpRequestFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpRequestFactorySettings", HttpClientAutoConfiguration__BeanDefinitions.getClientHttpRequestFactorySettingsBeanDefinition());
    beanFactory.registerBeanDefinition("spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties", HttpClientProperties__BeanDefinitions.getHttpClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration", JdbcTemplateConfiguration__BeanDefinitions.getJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcTemplate", JdbcTemplateConfiguration__BeanDefinitions.getJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration", NamedParameterJdbcTemplateConfiguration__BeanDefinitions.getNamedParameterJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("namedParameterJdbcTemplate", NamedParameterJdbcTemplateConfiguration__BeanDefinitions.getNamedParameterJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration", JdbcTemplateAutoConfiguration__BeanDefinitions.getJdbcTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties", JdbcProperties__BeanDefinitions.getJdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration", JdbcClientAutoConfiguration__BeanDefinitions.getJdbcClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcClient", JdbcClientAutoConfiguration__BeanDefinitions.getJdbcClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration", ReactorAutoConfiguration__BeanDefinitions.getReactorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties", ReactorProperties__BeanDefinitions.getReactorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration", DataSourceInitializationConfiguration__BeanDefinitions.getDataSourceInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourceScriptDatabaseInitializer", DataSourceInitializationConfiguration__BeanDefinitions.getDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration", DataSourceTransactionManagerAutoConfiguration__BeanDefinitions.JdbcTransactionManagerConfiguration.getJdbcTransactionManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__BeanDefinitions.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__BeanDefinitions.EnableTransactionManagementConfiguration.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration", TransactionAutoConfiguration__BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionTemplate", TransactionAutoConfiguration__BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration", RestClientAutoConfiguration__BeanDefinitions.getRestClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("httpMessageConvertersRestClientCustomizer", RestClientAutoConfiguration__BeanDefinitions.getHttpMessageConvertersRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientSsl", RestClientAutoConfiguration__BeanDefinitions.getRestClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilderConfigurer", RestClientAutoConfiguration__BeanDefinitions.getRestClientBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilder", RestClientAutoConfiguration__BeanDefinitions.getRestClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesRebinderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("configurationPropertiesBeans", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesBeansBeanDefinition());
    beanFactory.registerBeanDefinition("configurationPropertiesRebinder", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesRebinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration", LifecycleMvcEndpointAutoConfiguration__BeanDefinitions.getLifecycleMvcEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("environmentManager", LifecycleMvcEndpointAutoConfiguration__BeanDefinitions.getEnvironmentManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration", CompositeDiscoveryClientAutoConfiguration__BeanDefinitions.getCompositeDiscoveryClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("compositeDiscoveryClient", CompositeDiscoveryClientAutoConfiguration__BeanDefinitions.getCompositeDiscoveryClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration", SimpleDiscoveryClientAutoConfiguration__BeanDefinitions.getSimpleDiscoveryClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleDiscoveryProperties", SimpleDiscoveryClientAutoConfiguration__BeanDefinitions.getSimpleDiscoveryPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("simpleDiscoveryClient", SimpleDiscoveryClientAutoConfiguration__BeanDefinitions.getSimpleDiscoveryClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration", AutoServiceRegistrationAutoConfiguration__BeanDefinitions.getAutoServiceRegistrationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$RestTemplateConfiguration", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.RestTemplateConfiguration.getRestTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultEurekaClientHttpRequestFactorySupplier", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.RestTemplateConfiguration.getDefaultEurekaClientHttpRequestFactorySupplierBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateDiscoveryClientOptionalArgs", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.RestTemplateConfiguration.getRestTemplateDiscoveryClientOptionalArgsBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateTransportClientFactories", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.RestTemplateConfiguration.getRestTemplateTransportClientFactoriesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getDiscoveryClientOptionalArgsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tlsProperties", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getTlsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties", RestTemplateTimeoutProperties__BeanDefinitions.getRestTemplateTimeoutPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("eureka.client.restclient.timeout-org.springframework.cloud.netflix.eureka.RestClientTimeoutProperties", RestClientTimeoutProperties__BeanDefinitions.getRestClientTimeoutPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.CommonsClientAutoConfiguration", CommonsClientAutoConfiguration__BeanDefinitions.getCommonsClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration", ReactiveCommonsClientAutoConfiguration__BeanDefinitions.getReactiveCommonsClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration", LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("zoneConfig", LoadBalancerAutoConfiguration__BeanDefinitions.getZoneConfigBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerClientFactory", LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerClientFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerEagerContextInitializer", LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerEagerContextInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification", LoadBalancerClientSpecification__BeanDefinitions.getLoadBalancerClientSpecificationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties", LoadBalancerEagerLoadProperties__BeanDefinitions.getLoadBalancerEagerLoadPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties", LoadBalancerClientsProperties__BeanDefinitions.getLoadBalancerClientsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getBlockingLoadBalancerClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("blockingLoadBalancerClient", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getBlockingLoadBalancerClientBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerServiceInstanceCookieTransformer", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getLoadBalancerServiceInstanceCookieTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("xForwarderHeadersTransformer", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getXForwarderHeadersTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification", LoadBalancerClientSpecification__BeanDefinitions.getLoadBalancerClientSpecificationBeanDefinition1());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.LoadBalancerInterceptorConfig.getLoadBalancerInterceptorConfigBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerInterceptor", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.LoadBalancerInterceptorConfig.getLoadBalancerInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateCustomizer", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.LoadBalancerInterceptorConfig.getRestTemplateCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.DeferringLoadBalancerInterceptorConfig.getDeferringLoadBalancerInterceptorConfigBeanDefinition());
    beanFactory.registerBeanDefinition("deferringLoadBalancerInterceptor", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.DeferringLoadBalancerInterceptorConfig.getDeferringLoadBalancerInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("lbRestClientPostProcessor", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.DeferringLoadBalancerInterceptorConfig.getLbRestClientPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("lbRestTemplateBuilderPostProcessor", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.DeferringLoadBalancerInterceptorConfig.getLbRestTemplateBuilderPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancedRestTemplateInitializerDeprecated", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancedRestTemplateInitializerDeprecatedBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerRequestFactory", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerRequestFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration", LoadBalancerDefaultMappingsProviderAutoConfiguration__BeanDefinitions.getLoadBalancerDefaultMappingsProviderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerClientsDefaultsMappingsProvider", LoadBalancerDefaultMappingsProviderAutoConfiguration__BeanDefinitions.getLoadBalancerClientsDefaultsMappingsProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration", ServiceRegistryAutoConfiguration__BeanDefinitions.getServiceRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration", CommonsConfigAutoConfiguration__BeanDefinitions.getCommonsConfigAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultsBindHandlerAdvisor", CommonsConfigAutoConfiguration__BeanDefinitions.getDefaultsBindHandlerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration", ResourceServerTokenRelayAutoConfiguration__BeanDefinitions.ResourceServerTokenRelayRegistrationAutoConfiguration.getResourceServerTokenRelayRegistrationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration", ResourceServerTokenRelayAutoConfiguration__BeanDefinitions.getResourceServerTokenRelayAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.util.UtilAutoConfiguration", UtilAutoConfiguration__BeanDefinitions.getUtilAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("inetUtilsProperties", UtilAutoConfiguration__BeanDefinitions.getInetUtilsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("inetUtils", UtilAutoConfiguration__BeanDefinitions.getInetUtilsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.config.client.ConfigClientAutoConfiguration", ConfigClientAutoConfiguration__BeanDefinitions.getConfigClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getCompatibilityVerifierAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("compositeCompatibilityVerifier", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getCompositeCompatibilityVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("springBootVersionVerifier", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getSpringBootVersionVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("sleuthPresentVerifier", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getSleuthPresentVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties", CompatibilityVerifierProperties__BeanDefinitions.getCompatibilityVerifierPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration", LoadBalancerCacheAutoConfiguration__BeanDefinitions.DefaultLoadBalancerCacheManagerConfiguration.getDefaultLoadBalancerCacheManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultLoadBalancerCacheManager", LoadBalancerCacheAutoConfiguration__BeanDefinitions.DefaultLoadBalancerCacheManagerConfiguration.getDefaultLoadBalancerCacheManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration", LoadBalancerCacheAutoConfiguration__BeanDefinitions.LoadBalancerCacheManagerWarnConfiguration.getLoadBalancerCacheManagerWarnConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("caffeineWarnLogger", LoadBalancerCacheAutoConfiguration__BeanDefinitions.LoadBalancerCacheManagerWarnConfiguration.getCaffeineWarnLoggerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration", LoadBalancerCacheAutoConfiguration__BeanDefinitions.getLoadBalancerCacheAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties", LoadBalancerCacheProperties__BeanDefinitions.getLoadBalancerCachePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_AWC_entityManagerFactory", SharedEntityManagerCreator__BeanDefinitions.getJpaSharedEMAWCentityManagerFactoryBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
